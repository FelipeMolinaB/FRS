      Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      10  |   0     8  |   2    10  |   0     9  |   1  
    2       MM_Open      9  |   1     8  |   2     7  |   3     5  |   5  
    3      MM_Center    10  |   0     9  |   1    10  |   0    10  |   0  
    4     MM_Improved    8  |   2     9  |   1     8  |   2     9  |   1  
    5       AB_Open      5  |   5     3  |   7     5  |   5     3  |   7  
    6      AB_Center     6  |   4     8  |   2     6  |   4     7  |   3  
    7     AB_Improved    6  |   4     3  |   7     6  |   4     4  |   6  
--------------------------------------------------------------------------
           Win Rate:      77.1%        68.6%        74.3%        67.1%    

There were 6.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

(aind) MacBook-Pro-de-MAC:AIND_Isolation mac$ python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      10  |   0    10  |   0    10  |   0    10  |   0  
    2       MM_Open      8  |   2    10  |   0    10  |   0     7  |   3  
    3      MM_Center    10  |   0     9  |   1    10  |   0    10  |   0  
    4     MM_Improved    6  |   4     7  |   3     8  |   2     9  |   1  
    5       AB_Open      7  |   3     5  |   5     3  |   7     4  |   6  
    6      AB_Center     7  |   3     7  |   3     9  |   1     5  |   5  
    7     AB_Improved    6  |   4     2  |   8     3  |   7     5  |   5  
--------------------------------------------------------------------------
           Win Rate:      77.1%        71.4%        75.7%        71.4%    

There were 4.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

(aind) MacBook-Pro-de-MAC:AIND_Isolation mac$ python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      10  |   0    10  |   0     9  |   1     9  |   1  
    2       MM_Open      9  |   1     9  |   1     5  |   5     6  |   4  
    3      MM_Center    10  |   0     9  |   1     9  |   1     9  |   1  
    4     MM_Improved    6  |   4     9  |   1     6  |   4     8  |   2  
    5       AB_Open      6  |   4     6  |   4     4  |   6     3  |   7  
    6      AB_Center     8  |   2     6  |   4     4  |   6     6  |   4  
    7     AB_Improved    4  |   6     5  |   5     5  |   5     1  |   9  
--------------------------------------------------------------------------
           Win Rate:      75.7%        77.1%        60.0%        60.0%    

There were 2.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

(aind) MacBook-Pro-de-MAC:AIND_Isolation mac$ python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      10  |   0    10  |   0    10  |   0    10  |   0  
    2       MM_Open      9  |   1     6  |   4     5  |   5     9  |   1  
    3      MM_Center    10  |   0     9  |   1     8  |   2     9  |   1  
    4     MM_Improved    9  |   1     7  |   3     7  |   3     5  |   5  
    5       AB_Open      6  |   4     4  |   6     3  |   7     1  |   9  
    6      AB_Center     6  |   4     6  |   4    10  |   0     5  |   5  
    7     AB_Improved    4  |   6     3  |   7     3  |   7     2  |   8  
--------------------------------------------------------------------------
           Win Rate:      77.1%        64.3%        65.7%        58.6%    

There were 2.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

(aind) MacBook-Pro-de-MAC:AIND_Isolation mac$ python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      10  |   0    10  |   0    10  |   0     9  |   1  
    2       MM_Open     10  |   0     8  |   2     7  |   3     9  |   1  
    3      MM_Center     9  |   1    10  |   0    10  |   0    10  |   0  
    4     MM_Improved    8  |   2     8  |   2     8  |   2     6  |   4  
    5       AB_Open      8  |   2     6  |   4     4  |   6     2  |   8  
    6      AB_Center     6  |   4     6  |   4     7  |   3     6  |   4  
    7     AB_Improved    6  |   4     6  |   4     6  |   4     2  |   8  
--------------------------------------------------------------------------
           Win Rate:      81.4%        77.1%        74.3%        62.9%    
(aind) MacBook-Pro-de-MAC:AIND_Isolation mac$ python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

